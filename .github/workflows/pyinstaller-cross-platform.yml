name: Cross-platform executable
run-name: PyInstaller by @${{ github.actor }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  deployments: write



defaults:
  run:
    shell: bash

jobs:
  envs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set env
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            echo "REF=${{ github.ref }}" >> $GITHUB_ENV
            echo "VER=`expr match $ref 'v\([0-9]*\.[0-9]*\.[0-9]*\)'`" >> $GITHUB_ENV
            echo "TAG=`expr match $ref 'v[0-9]*_[0-9]*_[0-9]*'`" >> $GITHUB_ENV
          else
              echo "REF=${{ github.ref }}" >> $GITHUB_ENV
              echo "VER=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
              echo "TAG=latest" >> $GITHUB_ENV
          fi
          echo $VER
          echo $TAG
          echo $REF
    outputs:
#        ver: ${{ steps.set-env.outputs.VER }}
#        tag: ${{ steps.set-env.outputs.TAG }}
#        ref: ${{ steps.set-env.outputs.REF }}
        ver: ${{ env.VER }}
        tag: ${{ env.TAG }}
        ref: ${{ env.REF }}

  check:
    runs-on: ubuntu-latest
    needs:
      - envs

    steps:
      - name: Verify
        run: |
          echo "VER=${{ needs.envs.outputs.ver }}"
          echo "TAG=${{ needs.envs.outputs.tag }}"
          echo "REF=${{ needs.envs.outputs.ref }}"
          
    
  

  #  release:
#    name: Release binaries
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: release
#        id: release
#        uses: softprops/action-gh-release@v1
#        with:
#          name: ${{ env.VER }}
#          tag_name: ${{ env.TAG }}
#          body: |
#              Pellipop release for commit ${{ github.sha }}
#          draft: false
#          prerelease: false
#
#
#
#    #      - name: Release
##        uses: softprops/action-gh-release@v1
##        with:
##          if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
##          na
##
##          name: ${{ github.ref.replace('refs/tags/v', 'Version') if startsWith(github.ref, 'refs/tags/v') else Latest }}
##          tag_name: ${{ github.ref.replace('refs/tags/', '') if startsWith(github.ref, 'refs/tags/v') else latest }}
##          body: |
##            Pellipop release for commit ${{ github.sha }}
##          draft: false
##          prerelease: false
#
#
#
#    outputs:
#        upload_url: ${{ steps.release.outputs.upload_url }}
#        version: ${{ steps.release.outputs.tag_name }}
#        name: ${{ steps.release.outputs.name }}
#        ver: ${{ steps.set-env.outputs.VER }}
#        tag: ${{ steps.set-env.outputs.TAG }}

  build:
    name: Build release binaries

    strategy:
      fail-fast: false
      matrix:
        os:
#          - macos-latest
          - ubuntu-latest
#          - windows-latest

    needs:
      - envs

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12'
#          cache: 'pip'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install pyinstaller
#
#      - name: Install pellipop
#        run: |
#          pip install .
#
#      - name: Build with pyinstaller
#        run: |
#          pyinstaller pellipop/gui.py \
#          --onefile \
#          --name=pellipop-${{ matrix.os }}-${{ needs.release.outputs.ver }} \
#          --hidden-import='PIL._tkinter_finder' \
#          --windowed

      - name: Fake build
        run: |
          mkdir -p ./dist
          touch ./dist/pellipop-${{ matrix.os }}-${{ needs.envs.outputs.ver }}
          echo "Fake build for ${{ matrix.os }}"
        

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pellipop-${{ matrix.os }}
          path: ./dist/pellipop-${{ matrix.os }}*
          if-no-files-found: error

#      - name: Add artifact to the release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: ./dist/pellipop-${{ matrix.os }}*
#          asset_name: pellipop-${{ matrix.os }}
#          asset_content_type: application/octet-stream
#      - name: Cache binaries
#        uses: actions/cache@v2
#        with:
#          path: ./dist/pellipop-${{ matrix.os }}*
#          key: ${{ runner.os }}-pellipop-${{ matrix.os }}-${{ needs.envs.outputs.ver }}
#          restore-keys: |
#            ${{ runner.os }}-pellipop-${{ matrix.os }}-
#            ${{ runner.os }}-pellipop-
#            ${{ runner.os }}-
#
#
#    outputs:
#      cache-hit: ${{ steps.cache.outputs.cache-hit }}



  release:
    needs:
      - build
      - envs

    name: Release binaries
    runs-on: ubuntu-latest
    steps:
      -  name: Download binaries
         uses: actions/download-artifact@v4
         with:
           merge-multiple: true
           path: ./dist
           if-no-files-found: error
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.envs.outputs.ver }}
          tag_name: ${{ needs.envs.outputs.tag }}
          body: |
              Pellipop release for commit ${{ github.sha }}
          draft: false
          prerelease: false
#          overwrite: true
          files: |
              ./dist/pellipop-ubuntu-latest-${{ needs.envs.outputs.ver }}
              
                
              

#      - name: Add artifact to the release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: ./dist/pellipop-${{ matrix.os }}*
#          asset_name: pellipop-${{ matrix.os }}
#          asset_content_type: application/octet-stream



